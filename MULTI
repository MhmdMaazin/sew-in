import type React from "react"
import { SidebarInset, SidebarProvider } from "@/components/ui/sidebar"
import { AppSidebar } from "@/components/app-sidebar"
import { Topbar } from "@/components/topbar"
import { DataProvider } from "@/components/providers/data-provider"

export default function AppLayout({ children }: { children: React.ReactNode }) {
  return (
    <DataProvider>
      <SidebarProvider>
        <div className="flex min-h-svh w-full overflow-x-hidden">
          <AppSidebar />
          <SidebarInset>
            <Topbar />
            <main className="p-4 md:p-6 pb-24 md:pb-6">{children}</main>
          </SidebarInset>
        </div>
      </SidebarProvider>
    </DataProvider>
  )
}

// components/topbar.tsx
"use client"

import { useMemo, useState } from "react"
import Link from "next/link"
import { Bell, LogOut, Search, User2 } from 'lucide-react'
import { SidebarTrigger } from "@/components/ui/sidebar"

import { Input } from "@/components/ui/input"
import { Button } from "@/components/ui/button"
import {
  DropdownMenu,
  DropdownMenuTrigger,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuSeparator,
} from "@/components/ui/dropdown-menu"
import { useApp } from "@/hooks/use-app"
import { Avatar, AvatarFallback, AvatarImage } from "@/components/ui/avatar"

export function Topbar() {
  const { user, signOut, customers, orders, fabrics } = useApp()
  const [q, setQ] = useState("")
  const results = useMemo(() => {
    const term = q.trim().toLowerCase()
    if (!term) return []
    const cx = customers
      .filter((c) => c.name.toLowerCase().includes(term) || c.phone?.includes(term))
      .map((c) => ({ type: "Customer", label: c.name, href: `/customers/${c.id}` }))
    const ox = orders
      .filter((o) => o.code.toLowerCase().includes(term))
      .map((o) => ({ type: "Order", label: o.code, href: `/orders/${o.id}` }))
    const fx = fabrics
      .filter((f) => f.name.toLowerCase().includes(term))
      .map((f) => ({ type: "Fabric", label: f.name, href: `/fabrics#${f.id}` }))
    return [...cx, ...ox, ...fx].slice(0, 6)
  }, [q, customers, orders, fabrics])

  return (
    <header className="sticky top-0 z-40 w-full flex items-center gap-2 border-b bg-background px-2 sm:px-4 h-14">
      <SidebarTrigger />
      <div className="relative flex-1 max-w-xl">
        <Search className="w-4 h-4 absolute left-3 top-1/2 -translate-y-1/2 text-muted-foreground" />
        <Input
          placeholder="Search customers, orders, fabrics..."
          className="pl-9"
          value={q}
          onChange={(e) => setQ(e.target.value)}
        />
        {results.length > 0 && (
          <div className="absolute left-0 right-0 mt-1 max-h-[60svh] overflow-auto rounded-md border bg-popover text-popover-foreground shadow z-50">
            {results.map((r, i) => (
              <Link key={i} href={r.href} className="block px-3 py-2 text-sm hover:bg-accent">
                <span className="text-muted-foreground mr-2">{r.type}:</span>
                <span className="font-medium">{r.label}</span>
              </Link>
            ))}
          </div>
        )}
      </div>

      <Button variant="ghost" size="icon" className="relative">
        <Bell className="w-5 h-5" />
        <span className="sr-only">Notifications</span>
      </Button>

      <DropdownMenu>
        <DropdownMenuTrigger asChild>
          <Button variant="ghost" className="gap-2">
            <Avatar className="h-7 w-7">
              <AvatarImage src="/placeholder.svg?height=64&width=64" alt="avatar" />
              <AvatarFallback>
                <User2 className="w-4 h-4" />
              </AvatarFallback>
            </Avatar>
            <span className="hidden md:inline text-sm">{user?.name ?? "Guest"}</span>
          </Button>
        </DropdownMenuTrigger>
        <DropdownMenuContent align="end">
          {user ? (
            <>
              <DropdownMenuItem asChild>
                <Link href="/settings">Settings</Link>
              </DropdownMenuItem>
              <DropdownMenuSeparator />
              <DropdownMenuItem onClick={signOut}>
                <LogOut className="w-4 h-4 mr-2" />
                Sign out
              </DropdownMenuItem>
            </>
          ) : (
            <DropdownMenuItem asChild>
              <Link href="/login">Sign in</Link>
            </DropdownMenuItem>
          )}
        </DropdownMenuContent>
      </DropdownMenu>
    </header>
  )
}

// app/(app)/reports/page.tsx
import React from "react"
import { Card, CardContent, CardHeader } from "@/components/ui/card"
import { ChartContainer } from "@/components/chart-container"
import { ResponsiveContainer, LineChart, Line, CartesianGrid, XAxis, YAxis } from "recharts"
import { ChartTooltipContent } from "@/components/chart-tooltip-content"
import { useReports } from "@/hooks/use-reports"

export default function ReportsPage() {
  const { byMonth, fabricPopularity } = useReports()

  return (
    <div className="flex flex-col gap-4">
      <Card>
        <CardHeader>
          <h2 className="text-2xl font-bold">Monthly Orders</h2>
        </CardHeader>
        <CardContent>
          <div className="w-full overflow-x-hidden">
            <ChartContainer
              config={{ count: { label: "Orders", color: "hsl(var(--primary))" } }}
              className="h-[280px]"
            >
              <ResponsiveContainer>
                <LineChart data={byMonth}>
                  <CartesianGrid vertical={false} />
                  <XAxis dataKey="month" tickLine={false} axisLine={false} />
                  <YAxis allowDecimals={false} />
                  <ChartTooltipContent content={<ChartTooltipContent />} />
                  <Line dataKey="count" stroke="var(--color-count)" strokeWidth={2} dot />
                </LineChart>
              </ResponsiveContainer>
            </ChartContainer>
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <h2 className="text-2xl font-bold">Top Fabrics</h2>
        </CardHeader>
        <CardContent>
          <div className="w-full overflow-x-hidden">
            <ChartContainer
              config={{ used: { label: "Used", color: "hsl(var(--chart-2))" } }}
              className="h-[280px]"
            >
              <ResponsiveContainer>
                <BarChart data={fabricPopularity}>
                  <CartesianGrid vertical={false} />
                  <XAxis dataKey="name" tickLine={false} axisLine={false} />
                  <YAxis allowDecimals={false} />
                  <ChartTooltipContent content={<ChartTooltipContent />} />
                  <Bar dataKey="used" fill="var(--color-used)" radius={6}>
                    <LabelList dataKey="used" position="top" />
                  </Bar>
                </BarChart>
              </ResponsiveContainer>
            </ChartContainer>
          </div>
        </CardContent>
      </Card>

      <Card>
        <CardHeader>
          <h2 className="text-2xl font-bold">Revenue</h2>
        </CardHeader>
        <CardContent>
          <div className="w-full overflow-x-hidden">
            <ChartContainer config={{ revenue: { label: "Revenue", color: "hsl(var(--chart-3))" } }} className="h-[300px]">
              {/* Revenue chart code here */}
            </ChartContainer>
          </div>
        </CardContent>
      </Card>
    </div>
  )
}

// app/(app)/orders/[id]/page.tsx
import React from "react"
import { Card, CardContent, CardHeader } from "@/components/ui/card"
import { useOrder } from "@/hooks/use-order"

export default function OrderPage({ params }: { params: { id: string } }) {
  const { order } = useOrder(params.id)

  return (
    <div className="flex flex-col gap-4">
      <div className="flex items-center gap-3 flex-wrap">
        <h1 className="text-2xl font-bold">Order #{order.code}</h1>
        {/* Other header elements here */}
      </div>

      <Card>
        <CardHeader>
          <h2 className="text-xl font-bold">Order Details</h2>
        </CardHeader>
        <CardContent>
          {/* Order details code here */}
        </CardContent>
      </Card>
    </div>
  )
}

// app/(app)/customers/[id]/page.tsx
import React from "react"
import { Card, CardContent, CardHeader } from "@/components/ui/card"
import { useCustomer } from "@/hooks/use-customer"

export default function CustomerPage({ params }: { params: { id: string } }) {
  const { customer } = useCustomer(params.id)

  return (
    <div className="flex flex-col gap-4">
      <Card>
        <CardHeader className="flex flex-row items-center gap-4 flex-wrap">
          <h1 className="text-2xl font-bold">{customer.name}</h1>
          {/* Other header elements here */}
        </CardHeader>
        <CardContent>
          {/* Customer details code here */}
        </CardContent>
      </Card>
    </div>
  )
}

// app/globals.css
/* Prevent horizontal overflow on mobile */
html, body {
  max-width: 100%;
  overflow-x: hidden;
}

/* Safety: media should not overflow containers */
img, video, canvas, svg {
  max-width: 100%;
  height: auto;
}
